exports_files([
    "include/mcl/bls.h",
    "include/mcl/bn.h",
    "include/mcl/curve_type.h",
])

config_setting(
    name = "gmp_win_select_dll",
    constraint_values = [
        "@bazel_tools//platforms:windows",
    ],
)

cc_library(
  name = "mcl-lib",
  srcs = [
    "src/fp.cpp",
    "src/gen.cpp",
    "src/bls_c384.cpp",
  ],
  hdrs = select({
      "gmp_win_select_dll": ["@bazelify_gmp//gmp_6_1_2_win:gmp.h"],
      "//conditions:default": ["@bazelify_gmp//gmp_6_1_2:gmpxx.h"],
  }) + [
    "src/bls_c_impl.hpp",
    "src/fp_generator.hpp",
    "src/llvm_gen.hpp",
    "src/low_func_llvm.hpp",
    "src/low_func.hpp",
    "src/proto.hpp",
    "src/she_c_impl.hpp",
    "src/xbyak/xbyak_mnemonic.h",
    "src/xbyak/xbyak_util.h",
    "src/xbyak/xbyak.h",
    "src/qcoeff-bn254.hpp",
    "include/cybozu/array.hpp",
    "include/cybozu/atoi.hpp",
    "include/cybozu/benchmark.hpp",
    "include/cybozu/bit_operation.hpp",
    "include/cybozu/critical_section.hpp",
    "include/cybozu/crypto.hpp",
    "include/cybozu/endian.hpp",
    "include/cybozu/exception.hpp",
    "include/cybozu/hash.hpp",
    "include/cybozu/inttype.hpp",
    "include/cybozu/itoa.hpp",
    "include/cybozu/link_libeay32.hpp",
    "include/cybozu/link_mpir.hpp",
    "include/cybozu/link_ssleay32.hpp",
    "include/cybozu/mutex.hpp",
    "include/cybozu/option.hpp",
    "include/cybozu/random_generator.hpp",
    "include/cybozu/serializer.hpp",
    "include/cybozu/sha2.hpp",
    "include/cybozu/stream.hpp",
    "include/cybozu/test.hpp",
    "include/cybozu/unordered_map.hpp",
    "include/cybozu/xorshift.hpp",
    "include/mcl/aggregate_sig.hpp",
    "include/mcl/ahe.hpp",
    "include/mcl/array.hpp",
    "include/mcl/bls12_381.hpp",
    "include/mcl/bls.h",
    "include/mcl/bls.hpp",
    "include/mcl/bn.h",
    "include/mcl/bn.hpp",
    "include/mcl/impl/bn_c_impl.hpp",
    "include/mcl/bn384.hpp",
    "include/mcl/conversion.hpp",
    "include/mcl/curve_type.h",
    "include/mcl/ec.hpp",
    "include/mcl/ecdsa.h",
    "include/mcl/ecdsa.hpp",
    "include/mcl/ecparam.hpp",
    "include/mcl/elgamal.hpp",
    "include/mcl/fp_tower.hpp",
    "include/mcl/fp.hpp",
    "include/mcl/gmp_util.hpp",
    "include/mcl/lagrange.hpp",
    "include/mcl/op.hpp",
    "include/mcl/operator.hpp",
    "include/mcl/paillier.hpp",
    "include/mcl/randgen.hpp",
    "include/mcl/util.hpp",
    "include/mcl/vint.hpp",
    "include/mcl/window_method.hpp",
  ],
  includes = ["include", "src/xbyak", ] + select({
      "gmp_win_select_dll": ["external/bazelify_gmp/gmp_6_1_2_win"],
      "//conditions:default": [],
  }),
  copts = select({
      "gmp_win_select_dll": [],
      "//conditions:default": ["-Iexternal/bazelify_gmp/gmp_6_1_2", "-I$(GENDIR)/external/bazelify_gmp/gmp_6_1_2"],
  }),
  deps = select({
      "gmp_win_select_dll": [],
      "//conditions:default": ["@bazelify_gmp//gmp_6_1_2:gmp_hdrs"],
  }),
  visibility = ["//visibility:public"],
)
